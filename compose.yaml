services:
  termin:
    depends_on:
      - grid
      - postgres
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - APP_ENV=production
    volumes:
      - ./lib/web/public/logs:/usr/src/app/lib/web/public/logs:z
    secrets:
      - postgres_passwd
    environment:
      APP_ENV: production
      TZ: Europe/Berlin
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_passwd
      POSTGRES_USER: termin
    restart: always
    command: ruby app.rb

  web:
    depends_on:
      - postgres
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - APP_ENV=production
    volumes:
      - ./lib/web/public/logs:/usr/src/app/lib/web/public/logs:z
    secrets:
      - postgres_passwd
    ports:
      - 4567:4567/tcp
    command: ruby web.rb
    environment:
      APP_ENV: production
      TZ: Europe/Berlin
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_passwd
      POSTGRES_USER: termin

  postgres:
    image: docker.io/library/postgres:16.0
    restart: always
    volumes:
      - ./var/postgresql_data:/var/lib/postgresql/data:z
    secrets:
      - postgres_passwd
    environment:
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_passwd
      POSTGRES_USER: termin

  grid:
    image: docker.io/selenium/standalone-chrome:latest
    restart: always
    shm_size: 2gb
    ports:
      - 4444:4444/tcp
      - 7900:7900/tcp

secrets:
  postgres_passwd:
    file: ./postgres_passwd
