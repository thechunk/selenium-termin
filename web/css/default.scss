@use 'node_modules/@picocss/pico/scss/pico' with (
  $enable-semantic-container: true,
  $enable-classes: true,
  $enable-viewport: false
);
@import 'npm:@picocss/pico/scss/variables';

:root {
  --spacing: 0.75rem;
  --font-size: 1em;
}

iframe {
  width: 100%;
  height: 70vh;
}

[align="center"] {
  > nav {
    justify-content: center;
  }
}

td, details {
  > code {
    word-break: break-word;
  }
}

th {
  white-space: nowrap;
}

nav .logo {
  display: inline-block;
  height: 24px;
  margin-right: 0.3rem;
}
nav {
  strong, span {
    vertical-align: middle;
  }
}

.split-nav, .split-even {
  display: grid;
  grid-column-gap: calc(var(--block-spacing-horizontal) * 3);
}

.split-nav {
  grid-template-columns: 200px auto;

  td {
    white-space: nowrap;
  }

  nav {
    dl {
      margin: var(--nav-element-spacing-vertical) 0 0;
      padding: 0;

      dt, dd {
        @extend small;
        margin: 0;

        code {
          word-break: break-word;
        }
      }
    }

    header dl {
      margin: 0;
    }

    header dt, header dd {
      display: inline;
      vertical-align: top;
    }

    header dd {
      float: right;
    }

    article {
      margin: calc(var(--nav-element-spacing-vertical) * .5) 0;
      padding: calc(var(--nav-element-spacing-vertical) * .5) var(--nav-element-spacing-horizontal);

      header {
        margin: calc(var(--nav-element-spacing-vertical) * -.5) calc(var(--nav-element-spacing-horizontal) * -1);
        padding: var(--nav-link-spacing-vertical) calc(var(--nav-element-spacing-horizontal));
      }

      footer {
        margin: calc(var(--nav-element-spacing-vertical) * 0.5) calc(var(--nav-element-spacing-horizontal) * -1) calc(var(--nav-element-spacing-vertical) * -.5) ;
        padding: var(--nav-link-spacing-vertical) calc(var(--nav-element-spacing-horizontal));
      }
    }
  }
}

.split-even {
  grid-template-columns: 50% auto;

  > div:last-child {
    position: relative;
    margin-bottom: calc(var(--spacing) * 2);

    > details {
      position: absolute;
      width: 100%;
      height: 100%;
      padding-bottom: calc(var(--spacing) * 3);

      > code {
        height: 100%;
        overflow: auto;
      }
    }
  }
}

form > .grid > div > a[role="button"] {
  width: 100%;
}

@media all and (min-width: map-get($breakpoints, 'sm')) {
  .md-hidden { display: none; }
}
@media all and (max-width: map-get($breakpoints, 'sm')) {
  .sm-hidden { display: none; }

  .split-nav, .split-even {
    display: block;
  }

  .split-even {
    > div:last-child {
      position: static;
      margin-bottom: 0;

      > details {
        position: static;
        width: auto;
        height: none;
        padding-bottom: calc(var(--spacing));

        > code {
          height: auto;
          overflow: auto;
        }
      }
    }
  }
}

.status {
  &.success { color: var(--ins-color); }
  &.error { color: var(--del-color); }
  &.warn { color: var(--muted-color); }
}

@media only screen and (prefers-color-scheme: dark) {
  body .dark-hidden { display: none; }
}
@media only screen and (prefers-color-scheme: light) {
  body .light-hidden { display: none; }
}
